<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        $this->authorize('viewAny',{{ model }}::class);

        return view('{{ modelVariable }}.index');
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        $this->authorize('create',{{ model }}::class);

        return view('{{ modelVariable }}.create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequest }} $request)
    {
        $this->authorize('create',{{ model }}::class);
        
        ${{ modelVariable }} = {{ model }}::create($request->validated());

        self::success(${{ modelVariable }}->name.' '.__('has been successfully created'));

        return redirect(route('{{ modelVariable }}.show',${{ modelVariable }}));
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        $this->authorize('view',${{ modelVariable }});

        return view('{{ modelVariable }}.show', compact('{{ modelVariable }}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        $this->authorize('update',${{ modelVariable }});

        return view('{{ modelVariable }}.edit', compact('{{ modelVariable }}'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        $this->authorize('update',${{ modelVariable }});
        
        ${{ modelVariable }}->update($request->validated());

        self::success(${{ modelVariable }}->name.' '.__('has been successfully updated'));

        return redirect(route('{{ modelVariable }}.show',${{ modelVariable }}));
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        $this->authorize('create',{{ model }}::class);
        
        ${{ modelVariable }}->delete();

        self::success(${{ modelVariable }}->name.' '.__('has been successfully deleted'));

        return redirect(route('{{ modelVariable }}.index'));
    }
}
